React — это JavaScript-библиотека для создания пользовательских интерфейсов.

При использовании React можно выделить такие особенности:
  Разметка и относящаяся к ней логика находятся рядом и связаны друг с другом. Это упрощает дальнейшую работу с кодом.
  Выделен счётчик с кнопкой в компонент. Это значит, что мы можем очень легко его переиспользовать: достаточно на 44 строке написать ещё один тег <App />, и на странице появятся уже два независимых друг от друга счётчика.
  Больше не нужно использовать идентификаторы для обращения к DOM-элементам, что также делает код более легко поддерживаемым.
  Состояние компонента изолировано: нет никакой возможности модифицировать значение извне, если мы явно такое не задумывали. Благодаря этому поток данных в приложении становится более предсказуемым, что упрощает разработку и отладку.

React — это не универсальный инструмент, который подойдёт для любого проекта.
Эта библиотека действительно может упростить жизнь разработчикам:
  С её помощью можно построить интерфейс из отдельных компонентов, которые легко поддерживать.
  Она добавляет удобный слой абстракции, избавляя от необходимости работать с DOM напрямую.
  React — это уже не новая библиотека, за ней стоит крупная компания Facebook и большое сообщество разработчиков. Поэтому она отлично протестирована, регулярно поддерживается и стабильно обновляется, а переход к новым версиям проходит максимально гладко.
  Благодаря сообществу у React хорошо проработанная документация и большой опыт, накопленный в статьях, курсах и конференциях. Это значительно облегчает не только изучение библиотеки новичками, но и поиск ответов на всевозможные вопросы в процессе работы.
  На Гитхабе можно найти готовые React-компоненты почти на все случаи жизни. А если их нет, но есть нужные независимые библиотеки, то можно поискать интеграцию либо сделать её самостоятельно.
  В React-сообществе со временем сформировались определённые подходы и соглашения по организации проекта, кода, решению частых проблем. Для разработчиков это значит, что нужно тратить меньше времени на обсуждение некоторых договорённостей — можно использовать готовые и уже устоявшиеся.
  Хотя в проекте, скорее всего, будет налажен процесс сборки с помощью webpack, parcel, rollup или другого упаковщик, стоит иметь в виду, что это необязательно для использования React. Работая с этой библиотекой, вы пишете на чистом JS, и никакие диалекты HTML, CSS или JS изучать не нужно. Конечно, с React почти всегда используется JSX, но и это тоже опционально.
  React — это проект с открытым исходным кодом. Благодаря этому его можно безопасно иаспользовать даже в коммерческих приложениях.

Несколько типов проектов, которым подойдет React:
  Если проект планирует расширяться, и над ним работает или будет работать команда разработчиков
  Средним и крупным проектам будет полезен компонентный подход, который в том числе лежит в основах React.
  Legacy-проектам, которым предстоит пройти через рефакторинг. 
  
